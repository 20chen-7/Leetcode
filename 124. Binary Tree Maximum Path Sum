# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def __init__(self):
        self.max = float('-inf')
    def maxPathSum(self, root: Optional[TreeNode]) -> int:
        def maxGain(node):
            if not node:
                return 0
            left = max(0, maxGain(node.left))
            right = max(0, maxGain(node.right))
            path = right + left + node.val
            self.max = max(self.max, path)
            return node.val + max(left, right)
        maxGain(root)
        return self.max
